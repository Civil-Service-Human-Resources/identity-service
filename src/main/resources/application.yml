spring:
  data:
    redis:
      repositories:
        enabled: false
  session:
    store-type: none
  thymeleaf:
    cache: false
  messages:
    basename: i18n/messages
  flyway:
    locations: classpath:db/migration/{vendor}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false

server:
  servlet:
    session:
      timeout: ${SESSION_TIMEOUT:3600}
  port: 8080
  managementPort: 8085

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: ${ROOT_LOGGING_LEVEL:INFO}
    org.apache.http: INFO

templates:
  assetCdn: ${ASSET_CDN:}

accessToken:
  jwtKey: ${jwt_key}
  validityInSeconds: ${ACCESS_TOKEN_VALIDITY:86400}

govNotify:
  key: ${GOV_NOTIFY_API_KEY:key}
  template:
    invite: ${GOV_NOTIFY_INVITE_TEMPLATE_ID:7ef048a3-5c82-40fd-be4c-a238ce328fea}
    reset: ${GOV_NOTIFY_RESET_TEMPLATE_ID:d29b056c-349b-42fc-a453-920cfb58a906}
    resetSuccessful: ${GOV_NOTIFY_RESET_SUCCESSFUL_TEMPLATE_ID:994fb6d4-a57a-49f2-baee-b0c6f6060b63}
    passwordUpdate: ${GOV_NOTIFY_PASSWORD_UPDATE_TEMPLATE_ID:13c2b9ac-4ad0-449f-b43b-57c04fc88b1d}
    emailUpdate: ${GOV_NOTIFY_EMAIL_UPDATE_TEMPLATE_ID:f4c2ece1-5159-4736-92cb-4fe0df719308}

invite:
  url: ${INVITE_SIGNUP_URL:http://localhost:8080/signup/%s}
  validityInSeconds: ${INVITE_VALIDITY:259200}
  durationAfterReRegAllowedInSeconds: ${DURATION_AFTER_REREG_ALLOWED_SECONDS:86400}

reset:
  url: ${RESET_URL:http://localhost:8080/reset/%s}
  validityInSeconds: ${RESET_VALIDITY:86400}

emailUpdate:
  urlFormat: "${lpg.identity}/account/email/verify/%s?redirect=true"

accountValidation:
  passwordPattern: ${PASSWORD_PATTERN:(?!([a-zA-Z]*|[a-z\d]*|[^A-Z\d]*|[A-Z\d]*|[^a-z\d]*|[^a-zA-Z]*)$).{8,}}

#AuthenticationFailureListener in current Spring version is firing twice so need to increase maxAttempt value till fixed
#https://github:com/spring-projects/spring-security/issues/6281:
account:
  lockout:
    maxAttempt: 12

maintenancePage:
  enabled: ${MAINTENANCE_PAGE_ENABLED:false}
  contentLine1: ${MAINTENANCE_PAGE_CONTENT_LINE_1:The learning website is undergoing scheduled maintenance.}
  contentLine2: ${MAINTENANCE_PAGE_CONTENT_LINE_2:It will be unavailable between the hours of 7pm to 9pm on Wednesday 24th February 2021.}
  contentLine3: ${MAINTENANCE_PAGE_CONTENT_LINE_3:Apologies for the inconvenience.}
  contentLine4: ${MAINTENANCE_PAGE_CONTENT_LINE_4:If the maintenance period is extended, further information will be provided here.}
  skipForUsers: ${MAINTENANCE_PAGE_SKIP_FOR_USERS:tester1@domain.com,tester2@domain.com}
  skipForUris: ${MAINTENANCE_PAGE_SKIP_FOR_URIS:/health,/maintenance,/error,/webjars,/css,/img,/js,/oauth/check_token,/oauth/token,/oauth/resolve,/oauth/logout}

lpg:
  uiUrl: ${LPG_UI_URL:http://localhost:3001}
  identity: ${OAUTH_SERVICE_URL:http://localhost:8080}

registry:
  serviceUrl: ${REGISTRY_SERVICE_URL:http://localhost:9002}
  civilServantUrl: "${registry.serviceUrl}/civilServants"
  getOrganisationsMaxPageSize: ${REGISTRY_MAXIMUM_ORGANISATION_PAGE_SIZE:200}
  organisationalUnitsFlatUrl: "${registry.serviceUrl}/v2/organisationalUnits"
  agencyTokensUrl: "${registry.serviceUrl}/agencyTokens"
  domainsUrl: "${registry.serviceUrl}/domains"
  cache:
    allowlistTTLSeconds: ${ALLOWLIST_TTL:100000}
    organisationsTTLSeconds: ${ORGANISATIONS_TTL:100000}

identity:
  identityBaseUrl: ${IDENTITY_BASE_URL:http://identity:8080}
  clientId: ${IDENTITY_CLIENT_ID:identity}
  clientSecret: ${IDENTITY_CLIENT_SECRET:test}

reactivation:
  reactivationUrl: "${identity.identityBaseUrl}/account/reactivate/"
  emailTemplateId: ${EMAIL_TEMPLATE_ID:abfb2e5f-3905-4817-b041-c53afd1eb3e5}

textEncryption:
  encryptionKey: ${ENCRYPTION_KEY:0123456789abcdef0123456789abcdef}

---

database:
  host: ${DATABASE_HOST:jdbc:mysql://localhost:3306}
  name: ${DATABASE_NAME:identity}
  use-ssl: ${DATABASE_USESSL:false}

spring:
  profiles: test, production
  thymeleaf:
    cache: true
    check-template: true
  datasource:
    url: ${DATASOURCE_URL:${database.host}/${database.name}?useSSL=${database.use-ssl}&requireSSL=false}
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:my-secret-pw}
    platform: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        enable_lazy_load_no_trans: true
  data:
    redis:
      repositories:
        enabled: false
  redis:
    host: ${REDIS_HOST:localhost}
    password: ${REDIS_PASSWORD:}
    port: ${REDIS_PORT:6379}
  session:
    redis:
      namespace: spring:session
      flush-mode: on-save
    store-type: redis
